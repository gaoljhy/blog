paramiko模块

	基于ssh协议工作

	作用：
	
		1) 执行命令 
		2) 上传、下载文件 
		
安装模块 

(api_venv) E:\>pip install paramiko

		
一、基于用户名、密码认证连接主机

示例01：执行命令 

import paramiko

'''
    创建SSHClient类的实例
'''

ssh_client = paramiko.SSHClient()

'''
    设置丢失主机key的策略为自动添加 
'''
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy)

ssh_client.connect(hostname="192.168.224.132", port=22, username="root", password="redhat")

'''
    1、标准输入文件，用于与命令进行交互
    2、标准输出文件，保存命令正常执行结果 
    3、标准错误输出文件，保存命令错误信息
'''

stdin, stdout, stderr = ssh_client.exec_command("hostname; uname -r")
print(stdout.read())

ssh_client.close()



示例02：操作多台主机 【密码一样】

import paramiko

server_ip = [ "192.168.224.132", "192.168.224.133" ]

ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy)

for ip in server_ip:
    ssh_client.connect(hostname=ip, port=22, username="root", password="redhat")
    stdin, stdout, stderr = ssh_client.exec_command("hostname")
    print(stdout.read())
    ssh_client.close()



示例03：操作多台主机 【密码不一样】

import paramiko


server_ip = {
    "192.168.224.132":{
      "username": "root",
      "password":"123"
    },
    "192.168.224.133": {
        "username":"root",
        "password":"456"
    }
}


ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy)

for ip, info in server_ip.items():
    ssh_client.connect(hostname=ip, port=22, username=info.get("username"), password=info.get("password"))
    stdin,stdout,stderr = ssh_client.exec_command("hostname")
    print(stdout.read())
    ssh_client.close()




二、基于密钥连接主机 

1、配置windows与Linux免密登录 

	1) 通过xshell创建密钥对，并导出公钥
	2) 将公钥上传到服务器
	3) 将公钥修改到正确位置 
	
		[root@node01 ~]# cat id_rsa_768\ \(2\).pub > /root/.ssh/authorized_keys


2、将私钥文件导出 


import paramiko

ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy)

'''
    创建私钥文件对象
'''

private_key_obj = paramiko.RSAKey.from_private_key_file("e:/id_rsa_768 (2)")


'''
    pkey=   私钥文件对象
'''
ssh_client.connect(hostname="192.168.224.132", port=22, username="root", pkey=private_key_obj)

stdin, stdout, stderr = ssh_client.exec_command("hostname")

print(stdout.read())

ssh_client.close()











--------------------------------------------------------------

上传、下载文件

	基于SSH连接,
	
	通过SFTPClient类，基于现有SSH连接，创建ftp客户端 
	
	
示例01： 上传、下载文件

import paramiko

'''
    创建ssh连接
'''

ssh_conn = paramiko.Transport(("192.168.224.132", 22))
ssh_conn.connect(username="root", password="123")


'''
    基于ssh连接，创建ftp客户端 
'''

ftp_client = paramiko.SFTPClient.from_transport(ssh_conn)

'''
    上传文件
'''
ftp_client.put("e:/apiProject/test/a.txt", "/tmp/a.txt")

'''
    下载文件
'''

ftp_client.get("/etc/hosts", "e:/apiProject/test/hosts")

ssh_conn.close()




示例02： 自动部署zabbix-agent 

	1) zabbix yum源 
	2) yum install -y zabbix-agent 
	3) Server, ServerActive, hostname=
	
		sed 


import paramiko

server = {
    "192.168.224.132": {
        "name": "root",
        "password": "123"
    },
    "192.168.224.133": {
        "name": "root",
        "password": "456"
    }
}

for ip, info in server.items():
    ssh_conn = paramiko.Transport((ip, 22))
    ssh_conn.connect(username=info.get("name"), password=info.get("password"))

    ftp_client = paramiko.SFTPClient.from_transport(ssh_conn)
    ftp_client.put("e:/apiProject/data/zabbix34.repo", "/etc/yum.repos.d/zabbix34.repo")
    ssh_conn.close()



示例03：下载文件 

import paramiko

server = {
    "192.168.224.132": {
        "name": "root",
        "password": "123"
    },
    "192.168.224.133": {
        "name": "root",
        "password": "456"
    }
}


for ip, info in server.items():
    ssh_conn = paramiko.Transport((ip, 22))
    ssh_conn.connect(username=info.get("name"), password=info.get("password"))

    ftp_client = paramiko.SFTPClient.from_transport(ssh_conn)
    ftp_client.get("/etc/passwd", "e:/apiProject/data/passwd_%s" % ip)
    ssh_conn.close()






































































































