获取数据的方法

	1) 链接模板 
	2) 利用zabbix自带的键值key获取数据 
	

利用zabbix自带的键值key获取数据 
	

	创建监控项
	
		1) 监控项目名称 
		2) 键值 
		3) 单位
		4) 应用集 
		
		


zabbix常用键值


https://www.zabbix.com/documentation/3.4/zh/manual/config/items/itemtypes/zabbix_agent


一、其他 

	agent.hostname
	agent.ping 
	agent.version 
	

二、网卡数据 

	net.if.in[if,<mode>]
	
		⇒ net.if.in[eth0,errors]
		⇒ net.if.in[eth0]

	net.if.out[if,<mode>]

	net.if.total[if,<mode>]

	

三、检测服务状态 

	TCP服务 
	
		net.tcp.port[<ip>,port]

		net.tcp.service[service,<ip>,<port>]
		
		net.tcp.service.perf[service,<ip>,<port>]			检测TCP服务性能 


	UDP服务 

		net.udp.listen[port]

		net.udp.service[service,<ip>,<port>]

		net.udp.service.perf[service,<ip>,<port>]			检测UDP服务性能 



四、获取磁盘空间 

	vfs.fs.size[fs,<mode>]


	
五、进程相关 

	kernel.maxproc			//获取系统支持的最大进程数

	proc.num[<name>,<user>,<state>,<cmdline>]			//获取进程数 
	
		proc.num[,root]		
		proc.num[zabbix_server]				

	proc.cpu.util[<name>,<user>,<type>,<cmdline>,<mode>,<zone>]			//指定进程的CPU使用率 
	
		proc.cpu.util[mysqld]


	proc.mem[<name>,<user>,<mode>,<cmdline>,<memtype>]			//获取指定进程占用的内存
	
		proc.mem[mysqld]



六、检测文件内容是否有变化 

	vfs.file.cksum[file]

		vfs.file.cksum[/etc/passwd]





练习：

1、分别监控node01主机网卡的流入、流出、总流量及错误的数据包流量， 并创建图形 

2、监控node01主机/etc/passwd文件数据变化， 并创建图形  

3、在node01上分别安装ftp, httpd, mysql, ntp服务，监控所有服务的状态，并创建图形 

# yum install -y ntp			UDP/123 
# systemctl start ntpd
# systemctl enable ntpd


4、在node01添加一块2G硬盘，创建200M分区，并挂载到/opt/data目录；监控该分区的剩余空间；并创建图形 

5、分别监控node01主机以apache用户、mysql用户启动的进程数， 并创建图形  

6、分别监控node01主机httpd, mysql进程所占用的CPU使用率、及内存 




==============================================================================================================================

创建磁盘分区

[root@node01 ~]# fdisk /dev/vdb 
欢迎使用 fdisk (util-linux 2.23.2)。

更改将停留在内存中，直到您决定将更改写入磁盘。
使用写入命令前请三思。

Device does not contain a recognized partition table
使用磁盘标识符 0xf0266aae 创建新的 DOS 磁盘标签。

命令(输入 m 获取帮助)：n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
分区号 (1-4，默认 1)：1
起始 扇区 (2048-41943039，默认为 2048)：
将使用默认值 2048
Last 扇区, +扇区 or +size{K,M,G} (2048-41943039，默认为 41943039)：+5G
分区 1 已设置为 Linux 类型，大小设为 5 GiB

命令(输入 m 获取帮助)：w
The partition table has been altered!

Calling ioctl() to re-read partition table.
正在同步磁盘。
 

[root@node01 ~]# partprobe /dev/vdb
[root@node01 ~]# lsblk 
NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sr0              11:0    1 1024M  0 rom  
vda             252:0    0   20G  0 disk 
├─vda1          252:1    0    1G  0 part /boot
└─vda2          252:2    0   19G  0 part 
  ├─centos-root 253:0    0   17G  0 lvm  /
  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]
vdb             252:16   0   20G  0 disk 
└─vdb1          252:17   0    5G  0 part 


[root@node01 ~]# mkfs -t ext4 /dev/vdb1 

[root@node01 ~]# mkdir /data
[root@node01 ~]# vim /etc/fstab 

/dev/vdb1	/data	ext4	defaults	0 0


[root@node01 ~]# mount -a
[root@node01 ~]# df -hT
文件系统                类型      容量  已用  可用 已用% 挂载点
/dev/mapper/centos-root xfs        17G 1018M   16G    6% /
devtmpfs                devtmpfs  486M     0  486M    0% /dev
tmpfs                   tmpfs     497M     0  497M    0% /dev/shm
tmpfs                   tmpfs     497M  6.7M  490M    2% /run
tmpfs                   tmpfs     497M     0  497M    0% /sys/fs/cgroup
/dev/vda1               xfs      1014M  125M  890M   13% /boot
tmpfs                   tmpfs     100M     0  100M    0% /run/user/0
/dev/vdb1               ext4      4.8G   20M  4.6G    1% /data













