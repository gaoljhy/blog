通过python调用zabbix API实现监控自动管理  


	zabbix API 应用程序接口 
	
Zabbix API允许你以编程方式检索和修改Zabbix的配置，并提供对历史数据的访问。它广泛用于：

	创建新的应用程序以使用Zabbix；
	将Zabbix与第三方软件集成；
	自动执行常规任务。

调用zabbix API的方法：

	1) Zabbix API是基于Web的API，

	2) 通过发送HTTP请求调用zabbix API  
	
	3) 需要向 api_jsonrpc.php 位于前端目录中的文件发送HTTP POST请求

	4) http://x.x.x.x/zabbix/api_jsonrpc.php 


注意：

	1) 调用zabbix API，发送的数据格式必须是json格式， 返回的结果也是json
	
	2) 伪装首部
	
		Content-Type 头部必须设置为以下值之一：
			application/json-rpc
			application/json
			application/jsonrequest
	
	
	
------------------

1) 创建虚拟环境  

C:\>e:
E:\>python -m venv api_venv


2) 安装requests模块 

E:\>cd api_venv

E:\api_venv>cd Scripts

E:\api_venv\Scripts>activate

(api_venv) E:\>pip install requests


一、requests模块的使用 

	作用：发送HTTP请求 


	http发送数据的方法：
	
		get 		获取数据 
		post 		上传数据 


1) 发送get请求 

import requests

r = requests.get("http://www.baidu.com")
print(r)
print(r.text)
print(r.status_code)


2) 发送POST请求 

a) data=    以字典的形式指定上传的数据 

import requests

data = { "username": "martin", "password": "redhat" }

r = requests.post("http://mail.126.com", data=data)

print(r.text)


b) headers=		伪装HTTP首部

import requests

data = { "username": "martin", "password": "redhat" }

head = { "User-Agent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36" }

r = requests.post("http://mail.126.com", data=data, headers=head)

print(r.text)




二、json模块 

	作用：处理json数据 

	json  数据格式
	
	
1、json.loads   将json数据转换为字典 

>>> test = '{ "name":"martin", "password":"123"}'
>>>
>>> import json
>>> t1 = json.loads(test)
>>> type(t1)
<class 'dict'>
>>> t1
{'name': 'martin', 'password': '123'}
>>> t1["name"]
'martin'
>>> t1.get("name")
'martin'


2、json.dumps	将字典转换为json数据 

>>> test = '{ "name":"martin", "password":"123"}'
>>>
>>> import json
>>> t1 = json.loads(test)
>>> type(t1)
<class 'dict'>
>>> t1
{'name': 'martin', 'password': '123'}
>>> t1["name"]
'martin'
>>> t1.get("name")
'martin'	
	
	
	
	
	
示例：

1、登录zabbix,获取用户令牌token

import requests
import json

zabbix_url = "http://10.100.100.252:8888/zabbix/api_jsonrpc.php"

zabbix_user = "Admin"

zabbix_password = "zabbix"


'''
    登录zabbix，获取用户token
'''

def zabbix_user_login():

    data = {
        "jsonrpc": "2.0",
        "method": "user.login",
        "params": {
            "user": zabbix_user,
            "password": zabbix_password
        },
        "id": 1,
    }

    head = { "Content-Type": "application/json" }

    r = requests.post(url=zabbix_url, data=json.dumps(data), headers=head)
    print(r.text)

    result = json.loads(r.text)
    print(result.get("result"))





if __name__ == '__main__':
    zabbix_user_login()





2、获取主机信息

import requests
import json

zabbix_url = "http://10.100.100.252:8888/zabbix/api_jsonrpc.php"

zabbix_user = "Admin"

zabbix_password = "zabbix"


'''
    登录zabbix，获取用户token
'''

def zabbix_user_login():

    data = {
        "jsonrpc": "2.0",
        "method": "user.login",
        "params": {
            "user": zabbix_user,
            "password": zabbix_password
        },
        "id": 1,
    }

    head = { "Content-Type": "application/json" }

    r = requests.post(url=zabbix_url, data=json.dumps(data), headers=head)
    # print(r.text)

    result = json.loads(r.text)
    print(result.get("result"))



'''
    获取主机信息
'''


def get_host():
    data = {
        "jsonrpc": "2.0",
        "method": "host.get",
        "params": {
            "output": [
                "hostid",
                "host"
            ],
            "selectInterfaces": [
                "interfaceid",
                "ip"
            ]
        },
        "id": 2,
        "auth": "79a0bab1a4496375e53ced925675a18f"
    }

    head = { "Content-Type": "application/json" }

    r = requests.post(url=zabbix_url, data=json.dumps(data), headers=head)
    print(r.text)

    host_id = json.loads(r.text).get("result")[0].get("hostid")
    host_name = json.loads(r.text).get("result")[0].get("host")
    interface_id = json.loads(r.text).get("result")[0].get("interfaces")[0].get("interfaceid")
    interface_ip = json.loads(r.text).get("result")[0].get("interfaces")[0].get("ip")
    print(host_id, host_name, interface_id, interface_ip)



if __name__ == '__main__':
    # zabbix_user_login()
    get_host()


3、添加监控项


'''
    添加监控项
'''

def item_create():

    data = {
        "jsonrpc": "2.0",
        "method": "item.create",
        "params": {
            "name": "Free disk space on $1",
            "key_": "vfs.fs.size[/boot,free]",
            "hostid": "10084",
            "type": 0,
            "value_type": 3,
            "interfaceid": "1",
            "delay": 30
        },
        "auth": "79a0bab1a4496375e53ced925675a18f",
        "id": 3
    }

    head = { "Content-Type": "application/json" }

    r = requests.post(url=zabbix_url, data=json.dumps(data), headers=head)
    print(r.text)
    




示例：添加监控项    vfs.fs.size[/, free]


import requests
import json
import sys

zabbix_login_url = "http://10.100.100.252:8888/zabbix/api_jsonrpc.php"
zabbix_user = "Admin"
zabbix_password = "zabbix"


'''
    发送POST请求，获取数据 
'''

def send_post(zabbix_url, data):

    head = { "Content-Type": "application/json" }
    try:
        r = requests.post(url=zabbix_url, data=json.dumps(data), headers=head)
    except Exception as e:
        print("请求发送失败" + str(e))
        sys.exit()
    return json.loads(r.text)


'''
    登录zabbix，获取用户token
'''

def zabbix_user_login():

    data = {
        "jsonrpc": "2.0",
        "method": "user.login",
        "params": {
            "user": zabbix_user,
            "password": zabbix_password
        },
        "id": 1,
    }

    result = send_post(zabbix_url=zabbix_login_url, data=data)

    return result.get("result")


'''
    获取zabbix server HOSd
    
'''

def get_host_id():

    user_token = zabbix_user_login()

    data = {
        "jsonrpc": "2.0",
        "method": "host.get",
        "params": {
            "output": [
                "hostid",
                "host"
            ],
            "selectInterfaces": [
                "interfaceid",
                "ip"
            ]
        },
        "id": 2,
        "auth": user_token
    }

    result = send_post(zabbix_url=zabbix_login_url, data=data)
    return result.get("result")[0].get("hostid")


'''
    添加监控项
'''

def create_item():

    user_token = zabbix_user_login()

    host_id = get_host_id()

    data = {
        "jsonrpc": "2.0",
        "method": "item.create",
        "params": {
            "name": "Free disk space on $1",
            "key_": "vfs.fs.size[/,free]",
            "hostid": host_id,
            "type": 0,
            "value_type": 3,
            "interfaceid": "1",
            "delay": 30
        },
        "auth": user_token,
        "id": 3
    }

    result = send_post(zabbix_url=zabbix_login_url, data=data)

    item_id = result.get("result").get("itemids")[0]

    if item_id:
        print("创建成功")
    else:
        print("创建失败")



if __name__ == '__main__':

    create_item()




示例：自动添加主机


input()

	Linux server 组
	
	模板  ： templatt os linux 































	

	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	












